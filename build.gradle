buildscript {
    ext {
        serenityCoreVersion = '4.0.30'
        junitVersion = '5.8.2'
        logbackVersion = '1.4.14'
        lombokVersion = '1.18.24'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "net.serenity-bdd:serenity-gradle-plugin:4.0.30"
        classpath "net.serenity-bdd:serenity-single-page-report:$serenityCoreVersion"
    }
}

plugins {
    id 'java'
    id 'eclipse'
    id 'idea'
    id "net.serenity-bdd.serenity-gradle-plugin" version "${serenityCoreVersion}"
}



group = 'com.sofka'
version = '1.0-SNAPSHOT'
compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testImplementation group: 'junit', name: 'junit', version: '4.13.2'

    testImplementation 'junit:junit:4.13.1'

    implementation "net.serenity-bdd:serenity-core:$serenityCoreVersion"
    implementation "net.serenity-bdd:serenity-junit5:$serenityCoreVersion"
    implementation "net.serenity-bdd:serenity-cucumber:$serenityCoreVersion"
    implementation "net.serenity-bdd:serenity-rest-assured:$serenityCoreVersion"

    implementation "net.serenity-bdd:serenity-ensure:$serenityCoreVersion"
    implementation "net.serenity-bdd:serenity-screenplay:$serenityCoreVersion"
    implementation "net.serenity-bdd:serenity-screenplay-rest:$serenityCoreVersion"

    implementation "ch.qos.logback:logback-classic:$logbackVersion"
    compileOnly "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"
    testCompileOnly "org.projectlombok:lombok:$lombokVersion"
    testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"
}

test {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
    systemProperties System.getProperties()
}

serenity {
    testRoot = "com.runners"
    requirementsBaseDir = "src/test/resources/features"
    reports = ["single-page-html"]
}

gradle.startParameter.continueOnFailure = true

defaultTasks 'clean', 'test', 'aggregate'


test.finalizedBy(aggregate)